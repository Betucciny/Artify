import {
    MD3LightTheme as LightTheme,
    MD3DarkTheme as DarkTheme,
  } from 'react-native-paper';

export const darkTheme = {
    ...DarkTheme,
    roundess: 2,
    "colors": {
        ...DarkTheme.colors,
        primary: "#E816F3",
        onPrimary: "rgb(102, 0, 43)",
        "primaryContainer": "rgb(143, 0, 63)",
        "onPrimaryContainer": "rgb(255, 217, 223)",
        secondary: "rgb(85, 219, 198)",
        "onSecondary": "rgb(0, 55, 48)",
        "secondaryContainer": "rgb(0, 80, 71)",
        "onSecondaryContainer": "rgb(118, 248, 226)",
        "tertiary": "rgb(248, 189, 42)",
        "onTertiary": "rgb(64, 45, 0)",
        "tertiaryContainer": "rgb(92, 67, 0)",
        "onTertiaryContainer": "rgb(255, 223, 160)",
        "error": "rgb(255, 180, 171)",
        "onError": "rgb(105, 0, 5)",
        "errorContainer": "rgb(147, 0, 10)",
        "onErrorContainer": "rgb(255, 180, 171)",
        "background": "rgb(32, 26, 27)",
        "onBackground": "rgb(236, 224, 224)",
        "surface": "rgb(32, 26, 27)",
        "onSurface": "rgb(236, 224, 224)",
        "surfaceVariant": "rgb(82, 67, 70)",
        "onSurfaceVariant": "rgb(214, 194, 196)",
        "outline": "rgb(158, 140, 143)",
        "outlineVariant": "rgb(82, 67, 70)",
        "shadow": "rgb(0, 0, 0)",
        "scrim": "rgb(0, 0, 0)",
        "inverseSurface": "rgb(236, 224, 224)",
        "inverseOnSurface": "rgb(53, 47, 48)",
        "inversePrimary": "rgb(185, 12, 85)",
        "elevation": {
            "level0": "transparent",
            "level1": "rgb(43, 34, 35)",
            "level2": "rgb(50, 38, 40)",
            "level3": "rgb(57, 43, 45)",
            "level4": "rgb(59, 44, 47)",
            "level5": "rgb(63, 47, 50)"
        },
        "surfaceDisabled": "rgba(236, 224, 224, 0.12)",
        "onSurfaceDisabled": "rgba(236, 224, 224, 0.38)",
        "backdrop": "rgba(58, 45, 47, 0.4)",
    }
};

export const lightTheme = {
    ...LightTheme,
    roundness: 2,

    "colors": {
        ...LightTheme.colors,
        primary: "rgb(185, 12, 85)",
        onPrimary: "rgb(255, 255, 255)",
        "primaryContainer": "rgb(255, 217, 223)",
        "onPrimaryContainer": "rgb(63, 0, 24)",
        secondary: "rgb(0, 107, 94)",
        "onSecondary": "rgb(255, 255, 255)",
        "secondaryContainer": "rgb(118, 248, 226)",
        "onSecondaryContainer": "rgb(0, 32, 27)",
        "tertiary": "rgb(121, 89, 0)",
        "onTertiary": "rgb(255, 255, 255)",
        "tertiaryContainer": "rgb(255, 223, 160)",
        "onTertiaryContainer": "rgb(38, 26, 0)",
        "error": "rgb(186, 26, 26)",
        "onError": "rgb(255, 255, 255)",
        "errorContainer": "rgb(255, 218, 214)",
        "onErrorContainer": "rgb(65, 0, 2)",
        "background": "rgb(255, 251, 255)",
        "onBackground": "rgb(32, 26, 27)",
        "surface": "rgb(255, 251, 255)",
        "onSurface": "rgb(32, 26, 27)",
        "surfaceVariant": "rgb(243, 221, 224)",
        "onSurfaceVariant": "rgb(82, 67, 70)",
        "outline": "rgb(132, 115, 117)",
        "outlineVariant": "rgb(214, 194, 196)",
        "shadow": "rgb(0, 0, 0)",
        "scrim": "rgb(0, 0, 0)",
        "inverseSurface": "rgb(53, 47, 48)",
        "inverseOnSurface": "rgb(250, 238, 239)",
        "inversePrimary": "rgb(255, 177, 194)",
        "elevation": {
            "level0": "transparent",
            "level1": "rgb(252, 239, 247)",
            "level2": "rgb(249, 232, 241)",
            "level3": "rgb(247, 225, 236)",
            "level4": "rgb(247, 222, 235)",
            "level5": "rgb(245, 218, 231)"
        },
        "surfaceDisabled": "rgba(32, 26, 27, 0.12)",
        "onSurfaceDisabled": "rgba(32, 26, 27, 0.38)",
        "backdrop": "rgba(58, 45, 47, 0.4)",
    }
}
